services:
  core.api:
    image: ${DOCKER_REGISTRY-}coreapi:${PLATFORM:-linux}-${TAG:-latest}
    build:
      context: .
      dockerfile: src/Core.API/Dockerfile
    environment:
      ASPNETCORE_ENVIRONMENT: Development
      # ASPNETCORE_ENVIRONMENT: Cloud
    depends_on:
      - rabbitmq
      - postgres
    ports:
      - "7010:8080"
    networks:
      - postgres
      - rabbitmq_net
      - minionetwork

  authentication.api:
    image: ${DOCKER_REGISTRY-}authenticationapi:${PLATFORM:-linux}-${TAG:-latest}
    build:
      context: .
      dockerfile: src/Authentication.API/Dockerfile
    environment:
      ASPNETCORE_ENVIRONMENT: Development
      # ASPNETCORE_ENVIRONMENT: Cloud
    depends_on:
      - rabbitmq
      - postgres
    ports:
      - "7000:8080"
    networks:
      - postgres
      - rabbitmq_net
      - minionetwork

  worker.api:
    image: ${DOCKER_REGISTRY-}workerapi:${PLATFORM:-linux}-${TAG:-latest}
    build:
      context: .
      dockerfile: src/Worker.Api/Dockerfile
    environment:
      ASPNETCORE_ENVIRONMENT: Development
      # ASPNETCORE_ENVIRONMENT: Cloud
    depends_on:
      - rabbitmq
      - postgres
      - smtp4dev
    ports:
      - "7020:8080"
    networks:
      - smtp4devlan
      - postgres
      - rabbitmq_net

  rabbitmq:
    image: rabbitmq:3-management
    container_name: rabbitmq
    ports:
      - "5672:5672"
      - "15672:15672"
    environment:
      RABBITMQ_DEFAULT_USER: guest
      RABBITMQ_DEFAULT_PASS: guest
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq
    networks:
      - rabbitmq_net
    restart: unless-stopped

  postgres:
    container_name: postgres_container
    image: postgres
    environment:
      POSTGRES_USER: ${POSTGRES_USER:-postgres}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-postgres}
      PGDATA: /data/postgres
    volumes:
       - postgres:/data/postgres
    ports:
      - "5432:5432"
    networks:
      - postgres
    restart: unless-stopped
  
  pgadmin:
    container_name: pgadmin_container
    image: dpage/pgadmin4
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_DEFAULT_EMAIL:-brunobrixius@outlook.com}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_DEFAULT_PASSWORD:-admin}
      PGADMIN_CONFIG_SERVER_MODE: 'False'
    volumes:
       - pgadmin:/var/lib/pgadmin

    ports:
      - "${PGADMIN_PORT:-5050}:80"
    networks:
      - postgres
    restart: unless-stopped

  smtp4dev:
    image: rnwood/smtp4dev:v3
    restart: unless-stopped
    ports:
      # Web interface
      - '5000:80'
      # SMTP server port
      - '25:25'
      # IMAP server port
      - '143:143'
    volumes:
        - smtp4dev-data:/smtp4dev
    environment:
      #Specifies the URLs the web UI will use inside the container.
      - ServerOptions__Urls=http://*:80

      #Specifies the server hostname. Used in auto-generated TLS certificate if enabled.
      - ServerOptions__HostName=smtp4dev
    networks:
      - smtp4devlan

  # minio:
  #   image: docker.io/bitnami/minio:2024
  #   ports:
  #       - '9000:9000'
  #       - '9001:9001'
  #   networks:
  #       - minionetwork
  #   volumes:
  #       - 'minio_data:/data'
  #   environment:
  #       - MINIO_ROOT_USER=miniorentaladmin
  #       - MINIO_ROOT_PASSWORD=miniorentaladminpassword
  #       - MINIO_DEFAULT_BUCKETS=rentaldefaultbucket
  #       - MINIO_SCHEME=http
  #       - BITNAMI_DEBUG=true

networks:
  minionetwork:
    driver: bridge
  smtp4devlan:
    driver: bridge
  postgres:
    driver: bridge
  rabbitmq_net:
    driver: bridge

volumes:
    minio_data:
     driver: local
    smtp4dev-data:
     driver: local
    rabbitmq_data:
     driver: local
    postgres:
     driver: local
    pgadmin:
     driver: local

